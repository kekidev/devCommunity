{"ast":null,"code":"import _regeneratorRuntime from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from \"../firebase/firebase\";\nexport var addUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authUser) {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return firebase.firestore().collection(\"users\").doc(authUser.uid).set(_objectSpread({}, authUser), {\n              merge: true\n            });\n\n          case 2:\n            resp = _context.sent;\n            console.log(_objectSpread({}, authUser));\n            return _context.abrupt(\"return\", resp);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var addPost = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(post) {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return firebase.firestore().collection(\"posts\");\n\n          case 2:\n            resp = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addPost(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/keki/dev/websites/web/utils/db.ts"],"names":["firebase","addUser","authUser","firestore","collection","doc","uid","set","merge","resp","console","log","addPost","post"],"mappings":";;;;;;;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AAEA,OAAO,IAAMC,OAAO;AAAA,sEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFF,QAAQ,CACxBG,SADgB,GAEhBC,UAFgB,CAEL,OAFK,EAGhBC,GAHgB,CAGZH,QAAQ,CAACI,GAHG,EAIhBC,GAJgB,mBAIPL,QAJO,GAIK;AAAEM,cAAAA,KAAK,EAAE;AAAT,aAJL,CADE;;AAAA;AACfC,YAAAA,IADe;AAOrBC,YAAAA,OAAO,CAACC,GAAR,mBAAiBT,QAAjB;AAPqB,6CAQdO,IARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPR,OAAO;AAAA;AAAA;AAAA,GAAb;AAWP,OAAO,IAAMW,OAAO;AAAA,uEAAG,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFb,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CADE;;AAAA;AACfK,YAAAA,IADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPG,OAAO;AAAA;AAAA;AAAA,GAAb","sourcesContent":["import firebase from \"../firebase/firebase\";\n\nexport const addUser = async (authUser: any) => {\n  const resp = await firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(authUser.uid as string)\n    .set({ ...authUser }, { merge: true });\n\n  console.log({ ...authUser });\n  return resp;\n};\n\nexport const addPost = async (post) => {\n  const resp = await firebase.firestore().collection(\"posts\");\n};\n"]},"metadata":{},"sourceType":"module"}