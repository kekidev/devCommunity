{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from \"../firebase/firebase\";\nexport const addUser = async authUser => {\n  const resp = await firebase.firestore().collection(\"users\").doc(authUser.uid).set(_objectSpread({}, authUser), {\n    merge: true\n  });\n  return resp;\n};\nexport const addPost = async post => {\n  const resp = await firebase.firestore().collection(\"posts\").doc(post.author).set(_objectSpread({}, post), {\n    merge: true\n  });\n  return resp;\n};\nexport const db = firebase.firestore();","map":{"version":3,"sources":["/Users/keki/dev/websites/web/utils/db.ts"],"names":["firebase","addUser","authUser","resp","firestore","collection","doc","uid","set","merge","addPost","post","author","db"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAOC,QAAP,IAAyB;AAC9C,QAAMC,IAAI,GAAG,MAAMH,QAAQ,CACxBI,SADgB,GAEhBC,UAFgB,CAEL,OAFK,EAGhBC,GAHgB,CAGZJ,QAAQ,CAACK,GAHG,EAIhBC,GAJgB,mBAIPN,QAJO,GAIK;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAJL,CAAnB;AAMA,SAAON,IAAP;AACD,CARM;AAUP,OAAO,MAAMO,OAAO,GAAG,MAAOC,IAAP,IAAgB;AACrC,QAAMR,IAAI,GAAG,MAAMH,QAAQ,CACxBI,SADgB,GAEhBC,UAFgB,CAEL,OAFK,EAGhBC,GAHgB,CAGZK,IAAI,CAACC,MAHO,EAIhBJ,GAJgB,mBAIPG,IAJO,GAIC;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAJD,CAAnB;AAMA,SAAON,IAAP;AACD,CARM;AAUP,OAAO,MAAMU,EAAE,GAAGb,QAAQ,CAACI,SAAT,EAAX","sourcesContent":["import firebase from \"../firebase/firebase\";\n\nexport const addUser = async (authUser: any) => {\n  const resp = await firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(authUser.uid as string)\n    .set({ ...authUser }, { merge: true });\n\n  return resp;\n};\n\nexport const addPost = async (post) => {\n  const resp = await firebase\n    .firestore()\n    .collection(\"posts\")\n    .doc(post.author as string)\n    .set({ ...post }, { merge: true });\n\n  return resp;\n};\n\nexport const db = firebase.firestore();\n"]},"metadata":{},"sourceType":"module"}