{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/keki/dev/websites/web/src/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { AuthProvider } from \"../lib/auth\";\nimport mongoose from \"mongoose\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  mongoose.connect(\"mongodb+srv://keki:!bjh010406@cluster0.xnlq8.mongodb.net/post\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  }).then(() => {\n    console.log(\"connected\");\n  });\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/keki/dev/websites/web/src/pages/_app.tsx"],"names":["ChakraProvider","AuthProvider","mongoose","MyApp","Component","pageProps","connect","useNewUrlParser","useUnifiedTopology","then","console","log"],"mappings":";;;;;;;;;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAmD;AACjDH,EAAAA,QAAQ,CACLI,OADH,CACW,+DADX,EAC4E;AACxEC,IAAAA,eAAe,EAAE,IADuD;AAExEC,IAAAA,kBAAkB,EAAE;AAFoD,GAD5E,EAKGC,IALH,CAKQ,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GAPH;AAQA,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,YAAD;AAAA,6BACE,QAAC,SAAD,oBAAeN,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,eAAeF,KAAf","sourcesContent":["import { ChakraProvider } from \"@chakra-ui/react\";\nimport { AppProps } from \"next/app\";\nimport { AuthProvider } from \"../lib/auth\";\nimport mongoose from \"mongoose\";\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  mongoose\n    .connect(\"mongodb+srv://keki:!bjh010406@cluster0.xnlq8.mongodb.net/post\", {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    })\n    .then(() => {\n      console.log(\"connected\");\n    });\n  return (\n    <ChakraProvider>\n      <AuthProvider>\n        <Component {...pageProps} />\n      </AuthProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}