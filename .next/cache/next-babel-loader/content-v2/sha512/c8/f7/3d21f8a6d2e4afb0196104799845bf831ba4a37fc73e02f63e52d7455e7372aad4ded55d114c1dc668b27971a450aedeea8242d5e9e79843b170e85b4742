{"ast":null,"code":"import _regeneratorRuntime from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from \"../firebase/firebase\";\nexport var addUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authUser) {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return firebase.firestore().collection(\"users\").doc(authUser.uid).set(_objectSpread({}, authUser), {\n              merge: true\n            });\n\n          case 2:\n            resp = _context.sent;\n            return _context.abrupt(\"return\", resp);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getPost = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n    var snapshot, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return firebase.firestore().collection(\"articles\").doc(String(id)).get();\n\n          case 2:\n            snapshot = _context2.sent;\n            data = snapshot.exists ? JSON.stringify(snapshot.data()) : null;\n            return _context2.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getPost(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var addPost = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(postData) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return firebase.firestore().collection(\"articles\").add(postData);\n\n          case 2:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function addPost(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getAllPosts = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var snapshot, post;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return firebase.firestore().collection(\"articles\").get();\n\n          case 2:\n            snapshot = _context4.sent;\n            post = snapshot.docs.map(function (doc) {\n              return _objectSpread({\n                id: doc.id\n              }, doc.data());\n            });\n            return _context4.abrupt(\"return\", post);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getAllPosts() {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/keki/dev/websites/web/src/utils/db.ts"],"names":["firebase","addUser","authUser","firestore","collection","doc","uid","set","merge","resp","getPost","id","String","get","snapshot","data","exists","JSON","stringify","addPost","postData","add","res","getAllPosts","post","docs","map"],"mappings":";;;;;;;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AAEA,OAAO,IAAMC,OAAO;AAAA,sEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFF,QAAQ,CACxBG,SADgB,GAEhBC,UAFgB,CAEL,OAFK,EAGhBC,GAHgB,CAGZH,QAAQ,CAACI,GAHG,EAIhBC,GAJgB,mBAIPL,QAJO,GAIK;AAAEM,cAAAA,KAAK,EAAE;AAAT,aAJL,CADE;;AAAA;AACfC,YAAAA,IADe;AAAA,6CAMdA,IANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPR,OAAO;AAAA;AAAA;AAAA,GAAb;AASP,OAAO,IAAMS,OAAO;AAAA,uEAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEX,QAAQ,CAC5BG,SADoB,GAEpBC,UAFoB,CAET,UAFS,EAGpBC,GAHoB,CAGhBO,MAAM,CAACD,EAAD,CAHU,EAIpBE,GAJoB,EADF;;AAAA;AACfC,YAAAA,QADe;AAOfC,YAAAA,IAPe,GAORD,QAAQ,CAACE,MAAT,GAAkBC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACC,IAAT,EAAf,CAAlB,GAAoD,IAP5C;AAAA,8CAQdA,IARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPL,OAAO;AAAA;AAAA;AAAA,GAAb;AAWP,OAAO,IAAMS,OAAO;AAAA,uEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLpB,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CiB,GAA5C,CAAgDD,QAAhD,CADK;;AAAA;AACjBE,YAAAA,GADiB;AAAA,8CAEdA,GAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPH,OAAO;AAAA;AAAA;AAAA,GAAb;AAKP,OAAO,IAAMI,WAAW;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFvB,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CS,GAA5C,EADE;;AAAA;AACnBC,YAAAA,QADmB;AAEnBU,YAAAA,IAFmB,GAEZV,QAAQ,CAACW,IAAT,CAAcC,GAAd,CAAkB,UAACrB,GAAD;AAAA;AAAYM,gBAAAA,EAAE,EAAEN,GAAG,CAACM;AAApB,iBAA2BN,GAAG,CAACU,IAAJ,EAA3B;AAAA,aAAlB,CAFY;AAAA,8CAGlBS,IAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXD,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import firebase from \"../firebase/firebase\";\n\nexport const addUser = async (authUser: any) => {\n  const resp = await firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(authUser.uid as string)\n    .set({ ...authUser }, { merge: true });\n  return resp;\n};\n\nexport const getPost = async (id) => {\n  const snapshot = await firebase\n    .firestore()\n    .collection(\"articles\")\n    .doc(String(id))\n    .get();\n\n  const data = snapshot.exists ? JSON.stringify(snapshot.data()) : null;\n  return data;\n};\n\nexport const addPost = async (postData) => {\n  let res = await firebase.firestore().collection(\"articles\").add(postData);\n  return res;\n};\n\nexport const getAllPosts = async () => {\n  const snapshot = await firebase.firestore().collection(\"articles\").get();\n  const post = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n  return post;\n};\n"]},"metadata":{},"sourceType":"module"}