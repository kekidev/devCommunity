{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/keki/dev/websites/web/src/pages/projects.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button } from \"@chakra-ui/button\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Badge, Box, Flex, Grid, Container, Spacer, Stack, Text } from \"@chakra-ui/layout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\n\nfunction blog(props) {\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: \"gray.200\",\n    dark: \"gray.700\"\n  };\n  const textColor = {\n    light: \"gray.500\",\n    dark: \"gray.100\"\n  };\n  const badgeColor = {\n    light: \"gray\",\n    dark: \"teal\"\n  };\n  const variant = {\n    light: \"outline\",\n    dark: null\n  };\n  const router = useRouter();\n  const post = JSON.parse(props.post);\n  const e = uuidv4();\n\n  function PostGen(data) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      width: \"300px\",\n      height: \"380px\",\n      rounded: \"20px\",\n      m: 3,\n      overflow: \"hidden\",\n      boxShadow: \"xl\",\n      bg: bgColor[colorMode],\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        h: \"44\",\n        w: \"3xl\",\n        src: data.thumbnail,\n        alt: \"Image is not avaliable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          align: \"baseline\",\n          children: data.category.map(val => /*#__PURE__*/_jsxDEV(Badge, {\n            rounded: \"full\",\n            variant: variant[colorMode],\n            colorScheme: badgeColor[colorMode],\n            children: val.toUpperCase()\n          }, \"1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"h2\",\n          fontWeight: \"semibold\",\n          fontSize: \"xl\",\n          my: 2,\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          isTruncated: true,\n          fontWeight: \"light\",\n          fontSize: \"md\",\n          color: \"gray.500\",\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"semibold\",\n          fontSize: \"lg\",\n          color: textColor[colorMode],\n          children: [\"by \", data.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => router.push(`/blog/${data.id}`),\n            children: \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Blog - Untitled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"6xl\",\n      children: post.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        templateColumns: \"repeat(3, 1fr)\",\n        gap: 6,\n        children: post.map(singePost => /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"start\",\n          m: 2,\n          children: PostGen(singePost)\n        }, singePost.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getServerSideProps(context) {\n  const post = await getAllPosts();\n  const data = post.map(singlePost => {\n    return _objectSpread({}, singlePost);\n  });\n  return {\n    props: {\n      post: JSON.stringify(data)\n    }\n  };\n}\nexport default blog;","map":{"version":3,"sources":["/Users/keki/dev/websites/web/src/pages/projects.tsx"],"names":["Button","useColorMode","Image","Badge","Box","Flex","Grid","Container","Spacer","Stack","Text","v4","uuidv4","React","Navbar","Head","useRouter","blog","props","colorMode","bgColor","light","dark","textColor","badgeColor","variant","router","post","JSON","parse","e","PostGen","data","thumbnail","category","map","val","toUpperCase","title","description","author","push","id","length","singePost","getServerSideProps","context","getAllPosts","singlePost","stringify"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { Image } from \"@chakra-ui/image\";\nimport {\n  Badge,\n  Box,\n  Flex,\n  Grid,\n  Container,\n  Spacer,\n  Stack,\n  Text,\n} from \"@chakra-ui/layout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { NextPageContext } from \"next\";\n\nfunction blog(props) {\n  const { colorMode } = useColorMode();\n  const bgColor = { light: \"gray.200\", dark: \"gray.700\" };\n  const textColor = { light: \"gray.500\", dark: \"gray.100\" };\n  const badgeColor = { light: \"gray\", dark: \"teal\" };\n  const variant = { light: \"outline\", dark: null };\n  const router = useRouter();\n  const post = JSON.parse(props.post);\n  const e = uuidv4();\n  function PostGen(data) {\n    return (\n      <Box\n        width=\"300px\"\n        height=\"380px\"\n        rounded=\"20px\"\n        m={3}\n        overflow=\"hidden\"\n        boxShadow=\"xl\"\n        bg={bgColor[colorMode]}\n        key={data.id}\n      >\n        <Image\n          h=\"44\"\n          w=\"3xl\"\n          src={data.thumbnail}\n          alt=\"Image is not avaliable\"\n        />\n        <Box p={5}>\n          <Stack direction=\"row\" align=\"baseline\">\n            {data.category.map((val) => (\n              <Badge\n                key=\"1\"\n                rounded=\"full\"\n                variant={variant[colorMode]}\n                colorScheme={badgeColor[colorMode]}\n              >\n                {val.toUpperCase()}\n              </Badge>\n            ))}\n          </Stack>\n          <Text as=\"h2\" fontWeight=\"semibold\" fontSize=\"xl\" my={2}>\n            {data.title}\n          </Text>\n          <Text isTruncated fontWeight=\"light\" fontSize=\"md\" color=\"gray.500\">\n            {data.description}\n          </Text>\n          <Text\n            fontWeight=\"semibold\"\n            fontSize=\"lg\"\n            color={textColor[colorMode]}\n          >\n            by {data.author}\n          </Text>\n          <Box textAlign=\"center\" mt={4}>\n            <Button onClick={() => router.push(`/blog/${data.id}`)}>\n              자세히 보기\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n  \n  return (\n    <>\n      <Head>\n        <title>Blog - Untitled</title>\n      </Head>\n      <Flex>\n        <Spacer />\n        <Navbar />\n      </Flex>\n      <Container maxW=\"6xl\">\n        {post.length > 0 && (\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n            {post.map((singePost) => (\n              <Box key={singePost.id} textAlign=\"start\" m={2}>\n                {PostGen(singePost)}\n              </Box>\n            ))}\n          </Grid>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport async function getServerSideProps(context: NextPageContext) {\n  const post = await getAllPosts();\n  const data = post.map((singlePost: any) => {\n    return {\n      ...singlePost,\n    };\n  });\n  return {\n    props: {\n      post: JSON.stringify(data),\n    },\n  };\n}\n\nexport default blog;\n"]},"metadata":{},"sourceType":"module"}