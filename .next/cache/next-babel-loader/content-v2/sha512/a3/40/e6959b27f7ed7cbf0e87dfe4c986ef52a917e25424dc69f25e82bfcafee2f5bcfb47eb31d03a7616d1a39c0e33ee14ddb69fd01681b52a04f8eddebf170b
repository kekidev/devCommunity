{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/keki/dev/websites/web/src/pages/blog/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button } from \"@chakra-ui/button\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { Box, Flex, SimpleGrid, Spacer } from \"@chakra-ui/layout\";\nimport { motion } from \"framer-motion\";\nimport React from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { getAllPosts } from \"../../utils/db\";\n\nfunction blog(props) {\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: \"gray.200\",\n    dark: \"gray.700\"\n  };\n  const textColor = {\n    light: \"gray.500\",\n    dark: \"gray.100\"\n  };\n  const badgeColor = {\n    light: \"whatsapp\",\n    dark: \"teal\"\n  };\n  const router = useRouter();\n  const post = JSON.parse(props.post);\n\n  function generatePost(data) {\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: data.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) // create post\n    // <Box\n    //   width=\"300px\"\n    //   height=\"380px\"\n    //   maxHeight=\"400px\"\n    //   rounded=\"20px\"\n    //   overflow=\"hidden\"\n    //   boxShadow=\"sm\"\n    //   bg={bgColor[colorMode]}\n    // >\n    //   <Image w=\"7xl\" src={data.thumbnail} alt=\"Image is not avaliable\" />\n    //   <Box p={5}>\n    //     <Stack isInline align=\"baseline\">\n    //       {data.category.map((val) => (\n    //         <Badge rounded=\"full\" colorScheme=\"whatsapp\">\n    //           {val.toUpperCase()}\n    //         </Badge>\n    //       ))}\n    //       <Text textTransform=\"uppercase\" fontSize=\"sm\" color=\"gray.500\">\n    //         {data.create_at}/{data.create_at}/\n    //         {/* {data.create_at.getFullYear()} */}\n    //       </Text>\n    //     </Stack>\n    //     <Text as=\"h2\" fontWeight=\"semibold\" fontSize=\"xl\" my={2}>\n    //       {data.title}\n    //     </Text>\n    //     <Text isTruncated fontWeight=\"light\" fontSize=\"md\" color=\"gray.500\">\n    //       {data.content}\n    //     </Text>\n    //     <Text\n    //       fontWeight=\"semibold\"\n    //       fontSize=\"lg\"\n    //       color={textColor[colorMode]}\n    //     >\n    //       by {data.author}\n    //     </Text>\n    //     <Box textAlign=\"center\" mt={4}>\n    //       <Button onClick={() => router.push(`/blog/${data.id}`)}>\n    //         See more\n    //       </Button>\n    //     </Box>\n    //   </Box>\n    // </Box>\n    ;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Blog - Untitled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        whileHover: {\n          scale: 1.1\n        },\n        whileTap: {\n          scale: 1.3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          m: 5,\n          colorScheme: \"teal\",\n          variant: \"outline\",\n          children: \"Write Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      minChildWidth: \"120px\",\n      spacing: \"40px\",\n      children: post.map(singlePost => {\n        /*#__PURE__*/\n        _jsxDEV(Box, {\n          onClick: () => router.push(`/blog/${singlePost.id}`),\n          as: \"button\",\n          textAlign: \"start\",\n          m: 2,\n          children: generatePost(singlePost)\n        }, singlePost.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getServerSideProps(context) {\n  const post = await getAllPosts();\n  const data = post.map(singlePost => {\n    return _objectSpread({}, singlePost);\n  });\n  return {\n    props: {\n      post: JSON.stringify(data)\n    }\n  };\n}\nexport default blog;","map":{"version":3,"sources":["/Users/keki/dev/websites/web/src/pages/blog/index.tsx"],"names":["Button","useColorMode","Box","Flex","SimpleGrid","Spacer","motion","React","Navbar","Head","useRouter","getAllPosts","blog","props","colorMode","bgColor","light","dark","textColor","badgeColor","router","post","JSON","parse","generatePost","data","console","log","id","scale","map","singlePost","push","getServerSideProps","context","stringify"],"mappings":";;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAGA,SAEEC,GAFF,EAIEC,IAJF,EAQEC,UARF,EASEC,MATF,QAYO,mBAZP;AAaA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,WAAT,QAAqC,gBAArC;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAgBb,YAAY,EAAlC;AACA,QAAMc,OAAO,GAAG;AAAEC,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAAhB;AACA,QAAMC,SAAS,GAAG;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAAlB;AACA,QAAME,UAAU,GAAG;AAAEH,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAAnB;AACA,QAAMG,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACQ,IAAjB,CAAb;;AAEA,WAASG,YAAT,CAAsBC,IAAtB,EAA4B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,wBACE;AAAA,6BACE;AAAA,kBAAKA,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA;AADF,qBADF,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CF;AAgDD;;AAED,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAA,8BACE,QAAC,MAAD,CAAQ,GAAR;AAAY,QAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAxB;AAAwC,QAAA,QAAQ,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAlD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,CAAC,EAAE,CAAX;AAAc,UAAA,WAAW,EAAC,MAA1B;AAAiC,UAAA,OAAO,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAeE,QAAC,UAAD;AAAY,MAAA,aAAa,EAAC,OAA1B;AAAkC,MAAA,OAAO,EAAC,MAA1C;AAAA,gBAGGR,IAAI,CAACS,GAAL,CAAUC,UAAD,IAAgB;AACxB;AAAA,gBAAC,GAAD;AAEE,UAAA,OAAO,EAAE,MAAMX,MAAM,CAACY,IAAP,CAAa,SAAQD,UAAU,CAACH,EAAG,EAAnC,CAFjB;AAGE,UAAA,EAAE,EAAC,QAHL;AAIE,UAAA,SAAS,EAAC,OAJZ;AAKE,UAAA,CAAC,EAAE,CALL;AAAA,oBAOGJ,YAAY,CAACO,UAAD;AAPf,WACOA,UAAU,CAACH,EADlB;AAAA;AAAA;AAAA;AAAA;AASD,OAVA;AAHH;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAiCD;;AAED,OAAO,eAAeK,kBAAf,CAAkCC,OAAlC,EAA4D;AACjE,QAAMb,IAAI,GAAG,MAAMV,WAAW,EAA9B;AACA,QAAMc,IAAI,GAAGJ,IAAI,CAACS,GAAL,CAAUC,UAAD,IAAqB;AACzC,6BACKA,UADL;AAGD,GAJY,CAAb;AAKA,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLQ,MAAAA,IAAI,EAAEC,IAAI,CAACa,SAAL,CAAeV,IAAf;AADD;AADF,GAAP;AAKD;AAED,eAAeb,IAAf","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { Image } from \"@chakra-ui/image\";\nimport {\n  Badge,\n  Box,\n  Center,\n  Flex,\n  Grid,\n  GridItem,\n  HStack,\n  SimpleGrid,\n  Spacer,\n  Stack,\n  Text,\n} from \"@chakra-ui/layout\";\nimport { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport { Post } from \"../../types/post\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { NextPageContext } from \"next\";\nimport { getAllPosts, getPost } from \"../../utils/db\";\n\nfunction blog(props) {\n  const { colorMode } = useColorMode();\n  const bgColor = { light: \"gray.200\", dark: \"gray.700\" };\n  const textColor = { light: \"gray.500\", dark: \"gray.100\" };\n  const badgeColor = { light: \"whatsapp\", dark: \"teal\" };\n  const router = useRouter();\n  const post = JSON.parse(props.post);\n\n  function generatePost(data) {\n    console.log(data);\n\n    return (\n      <>\n        <h1>{data.id}</h1>\n      </>\n      // create post\n      // <Box\n      //   width=\"300px\"\n      //   height=\"380px\"\n      //   maxHeight=\"400px\"\n      //   rounded=\"20px\"\n      //   overflow=\"hidden\"\n      //   boxShadow=\"sm\"\n      //   bg={bgColor[colorMode]}\n      // >\n      //   <Image w=\"7xl\" src={data.thumbnail} alt=\"Image is not avaliable\" />\n      //   <Box p={5}>\n      //     <Stack isInline align=\"baseline\">\n      //       {data.category.map((val) => (\n      //         <Badge rounded=\"full\" colorScheme=\"whatsapp\">\n      //           {val.toUpperCase()}\n      //         </Badge>\n      //       ))}\n      //       <Text textTransform=\"uppercase\" fontSize=\"sm\" color=\"gray.500\">\n      //         {data.create_at}/{data.create_at}/\n      //         {/* {data.create_at.getFullYear()} */}\n      //       </Text>\n      //     </Stack>\n      //     <Text as=\"h2\" fontWeight=\"semibold\" fontSize=\"xl\" my={2}>\n      //       {data.title}\n      //     </Text>\n      //     <Text isTruncated fontWeight=\"light\" fontSize=\"md\" color=\"gray.500\">\n      //       {data.content}\n      //     </Text>\n      //     <Text\n      //       fontWeight=\"semibold\"\n      //       fontSize=\"lg\"\n      //       color={textColor[colorMode]}\n      //     >\n      //       by {data.author}\n      //     </Text>\n      //     <Box textAlign=\"center\" mt={4}>\n      //       <Button onClick={() => router.push(`/blog/${data.id}`)}>\n      //         See more\n      //       </Button>\n      //     </Box>\n      //   </Box>\n      // </Box>\n    );\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Blog - Untitled</title>\n      </Head>\n      <Flex>\n        <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 1.3 }}>\n          <Button m={5} colorScheme=\"teal\" variant=\"outline\">\n            Write Post\n          </Button>\n        </motion.div>\n\n        <Spacer />\n        <Navbar />\n      </Flex>\n\n      <SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n        {/* get posts from firebase and call function */}\n        {/* TODO: get data from firebase and display data */}\n        {post.map((singlePost) => {\n          <Box\n            key={singlePost.id}\n            onClick={() => router.push(`/blog/${singlePost.id}`)}\n            as=\"button\"\n            textAlign=\"start\"\n            m={2}\n          >\n            {generatePost(singlePost)}\n          </Box>;\n        })}\n      </SimpleGrid>\n    </>\n  );\n}\n\nexport async function getServerSideProps(context: NextPageContext) {\n  const post = await getAllPosts();\n  const data = post.map((singlePost: any) => {\n    return {\n      ...singlePost,\n    };\n  });\n  return {\n    props: {\n      post: JSON.stringify(data),\n    },\n  };\n}\n\nexport default blog;\n"]},"metadata":{},"sourceType":"module"}