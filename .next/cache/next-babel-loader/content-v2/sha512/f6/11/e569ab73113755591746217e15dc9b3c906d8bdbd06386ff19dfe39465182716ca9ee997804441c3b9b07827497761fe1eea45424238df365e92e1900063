{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/keki/dev/websites/web/src/pages/blog/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Badge, Box, Divider, Flex, Heading, SimpleGrid, Spacer, Stack, Text } from \"@chakra-ui/layout\";\nimport { motion } from \"framer-motion\";\nimport React from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\n\nfunction blog(props) {\n  _s();\n\n  var _this2 = this;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var bgColor = {\n    light: \"gray.200\",\n    dark: \"gray.700\"\n  };\n  var textColor = {\n    light: \"gray.500\",\n    dark: \"gray.100\"\n  };\n  var badgeColor = {\n    light: \"whatsapp\",\n    dark: \"teal\"\n  };\n  var router = useRouter();\n  var post = JSON.parse(props.post);\n\n  function generatePost(data) {\n    var _this = this;\n\n    return /*#__PURE__*/_jsxDEV(Box, {\n      width: \"300px\",\n      height: \"380px\",\n      maxHeight: \"400px\",\n      rounded: \"20px\",\n      overflow: \"hidden\",\n      boxShadow: \"sm\",\n      bg: bgColor[colorMode],\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        w: \"7xl\",\n        src: data.thumbnail,\n        alt: \"Image is not avaliable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          isInline: true,\n          align: \"baseline\",\n          children: [data.category.map(function (val) {\n            return /*#__PURE__*/_jsxDEV(Badge, {\n              rounded: \"full\",\n              colorScheme: \"whatsapp\",\n              children: val.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(Text, {\n            textTransform: \"uppercase\",\n            fontSize: \"sm\",\n            color: \"gray.500\",\n            children: [data.create_at, \"/\", data.create_at, \"/\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"h2\",\n          fontWeight: \"semibold\",\n          fontSize: \"xl\",\n          my: 2,\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          isTruncated: true,\n          fontWeight: \"light\",\n          fontSize: \"md\",\n          color: \"gray.500\",\n          children: data.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"semibold\",\n          fontSize: \"lg\",\n          color: textColor[colorMode],\n          children: [\"by \", data.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: function onClick() {\n              return router.push(\"/blog/\".concat(data.id));\n            },\n            children: \"See more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  var generateQuizCard = function generateQuizCard(singleQuiz) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      m: 3,\n      borderWidth: \"1px\",\n      borderRadius: \"lg\",\n      p: 6,\n      boxShadow: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h3\",\n        size: \"lg\",\n        children: singleQuiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, _this2), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        mt: 2,\n        children: [\"\\uC791\\uC131\\uC790: \", singleQuiz.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this2), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.500\",\n        mt: 2,\n        children: [\"\\uB9DE\\uCD98 \\uC0AC\\uB78C \\uC218: \", singleQuiz.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this2), /*#__PURE__*/_jsxDEV(Divider, {\n        mt: 3,\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this2), /*#__PURE__*/_jsxDEV(Text, {\n        noOfLines: [1, 2, 3],\n        children: singleQuiz.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Blog - Untitled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        whileHover: {\n          scale: 1.1\n        },\n        whileTap: {\n          scale: 1.3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          m: 5,\n          colorScheme: \"teal\",\n          variant: \"outline\",\n          children: \"Write Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      minChildWidth: \"120px\",\n      spacing: \"40px\",\n      children: post.length > 0 && /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        minChildWidth: \"400px\",\n        children: post.map(function (singleQuiz) {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            onClick: function onClick() {\n              return router.push(\"/quiz/\".concat(singleQuiz.id));\n            },\n            as: \"button\",\n            textAlign: \"start\",\n            m: 2,\n            children: generateQuizCard(singleQuiz)\n          }, singleQuiz.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(blog, \"jVRnPhorGIGKAdQNabATntCDVO8=\", false, function () {\n  return [useColorMode, useRouter];\n});\n\nexport var __N_SSP = true;\nexport default blog;","map":{"version":3,"sources":["/Users/keki/dev/websites/web/src/pages/blog/index.tsx"],"names":["Button","useColorMode","Image","Badge","Box","Divider","Flex","Heading","SimpleGrid","Spacer","Stack","Text","motion","React","Navbar","Head","useRouter","blog","props","colorMode","bgColor","light","dark","textColor","badgeColor","router","post","JSON","parse","generatePost","data","thumbnail","category","map","val","toUpperCase","create_at","title","content","author","push","id","generateQuizCard","singleQuiz","description","scale","length"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { Image } from \"@chakra-ui/image\";\nimport {\n  Badge,\n  Box,\n  Center,\n  Divider,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  HStack,\n  SimpleGrid,\n  Spacer,\n  Stack,\n  Text,\n} from \"@chakra-ui/layout\";\nimport { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport { Post } from \"../../types/post\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { NextPageContext } from \"next\";\nimport { getAllPosts, getPost } from \"../../utils/db\";\n\nfunction blog(props) {\n  const { colorMode } = useColorMode();\n  const bgColor = { light: \"gray.200\", dark: \"gray.700\" };\n  const textColor = { light: \"gray.500\", dark: \"gray.100\" };\n  const badgeColor = { light: \"whatsapp\", dark: \"teal\" };\n  const router = useRouter();\n  const post = JSON.parse(props.post);\n\n  function generatePost(data) {\n    return (\n      <Box\n        width=\"300px\"\n        height=\"380px\"\n        maxHeight=\"400px\"\n        rounded=\"20px\"\n        overflow=\"hidden\"\n        boxShadow=\"sm\"\n        bg={bgColor[colorMode]}\n        key={data.id}\n      >\n        <Image w=\"7xl\" src={data.thumbnail} alt=\"Image is not avaliable\" />\n        <Box p={5}>\n          <Stack isInline align=\"baseline\">\n            {data.category.map((val) => (\n              <Badge rounded=\"full\" colorScheme=\"whatsapp\">\n                {val.toUpperCase()}\n              </Badge>\n            ))}\n            <Text textTransform=\"uppercase\" fontSize=\"sm\" color=\"gray.500\">\n              {data.create_at}/{data.create_at}/\n              {/* {data.create_at.getFullYear()} */}\n            </Text>\n          </Stack>\n          <Text as=\"h2\" fontWeight=\"semibold\" fontSize=\"xl\" my={2}>\n            {data.title}\n          </Text>\n          <Text isTruncated fontWeight=\"light\" fontSize=\"md\" color=\"gray.500\">\n            {data.content}\n          </Text>\n          <Text\n            fontWeight=\"semibold\"\n            fontSize=\"lg\"\n            color={textColor[colorMode]}\n          >\n            by {data.author}\n          </Text>\n          <Box textAlign=\"center\" mt={4}>\n            <Button onClick={() => router.push(`/blog/${data.id}`)}>\n              See more\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n\n  const generateQuizCard = (singleQuiz) => {\n    return (\n      <Box m={3} borderWidth=\"1px\" borderRadius=\"lg\" p={6} boxShadow=\"xl\">\n        <Heading as=\"h3\" size=\"lg\">\n          {singleQuiz.title}\n        </Heading>\n\n        <Text color=\"gray.500\" mt={2}>\n          작성자: {singleQuiz.author}\n        </Text>\n        <Text color=\"gray.500\" mt={2}>\n          맞춘 사람 수: {singleQuiz.description}\n        </Text>\n\n        <Divider mt={3} mb={3} />\n        <Text noOfLines={[1, 2, 3]}>{singleQuiz.description}</Text>\n      </Box>\n    );\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Blog - Untitled</title>\n      </Head>\n      <Flex>\n        <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 1.3 }}>\n          <Button m={5} colorScheme=\"teal\" variant=\"outline\">\n            Write Post\n          </Button>\n        </motion.div>\n\n        <Spacer />\n        <Navbar />\n      </Flex>\n\n      <SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n        {/* {post.map((singlePost) => {\n          <Box\n            key={singlePost.id}\n            onClick={() => router.push(`/blog/${singlePost.id}`)}\n            as=\"button\"\n            textAlign=\"start\"\n            m={2}\n          >\n            {generatePost(singlePost)}\n          </Box>;\n        })} */}\n        {post.length > 0 && (\n          <SimpleGrid minChildWidth=\"400px\">\n            {post.map((singleQuiz) => (\n              <Box\n                key={singleQuiz.id}\n                onClick={() => router.push(`/quiz/${singleQuiz.id}`)}\n                as=\"button\"\n                textAlign=\"start\"\n                m={2}\n              >\n                {generateQuizCard(singleQuiz)}\n              </Box>\n            ))}\n          </SimpleGrid>\n        )}\n      </SimpleGrid>\n    </>\n  );\n}\n\nexport async function getServerSideProps(context: NextPageContext) {\n  const post = await getAllPosts();\n  const data = post.map((singlePost: any) => {\n    return {\n      ...singlePost,\n    };\n  });\n  return {\n    props: {\n      post: JSON.stringify(data),\n    },\n  };\n}\n\nexport default blog;\n"]},"metadata":{},"sourceType":"module"}