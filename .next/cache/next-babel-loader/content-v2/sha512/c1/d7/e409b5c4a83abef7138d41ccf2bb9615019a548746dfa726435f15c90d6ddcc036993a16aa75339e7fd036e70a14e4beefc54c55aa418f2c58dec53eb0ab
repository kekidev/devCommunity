{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/keki/dev/websites/web/src/pages/blog/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Badge, Box, Flex, SimpleGrid, Spacer, Stack, Text } from \"@chakra-ui/layout\";\nimport { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\n\nfunction blog(props) {\n  _s();\n\n  var _this2 = this;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var bgColor = {\n    light: \"gray.200\",\n    dark: \"gray.700\"\n  };\n  var textColor = {\n    light: \"gray.500\",\n    dark: \"gray.100\"\n  };\n  var badgeColor = {\n    light: \"whatsapp\",\n    dark: \"teal\"\n  };\n  var router = useRouter();\n  var post = JSON.parse(props.post);\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  function generatePost(data) {\n    var _this = this;\n\n    return /*#__PURE__*/_jsxDEV(Box, {\n      width: \"300px\",\n      height: \"380px\",\n      maxHeight: \"400px\",\n      rounded: \"20px\",\n      overflow: \"hidden\",\n      boxShadow: \"sm\",\n      bg: bgColor[colorMode],\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        w: \"7xl\",\n        src: data.thumbnail,\n        alt: \"Image is not avaliable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          isInline: true,\n          align: \"baseline\",\n          children: [data.category.map(function (val) {\n            return /*#__PURE__*/_jsxDEV(Badge, {\n              rounded: \"full\",\n              colorScheme: \"whatsapp\",\n              children: val.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(Text, {\n            textTransform: \"uppercase\",\n            fontSize: \"sm\",\n            color: \"gray.500\",\n            children: [data.create_at, \"/\", data.create_at, \"/\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"h2\",\n          fontWeight: \"semibold\",\n          fontSize: \"xl\",\n          my: 2,\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          isTruncated: true,\n          fontWeight: \"light\",\n          fontSize: \"md\",\n          color: \"gray.500\",\n          children: data.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"semibold\",\n          fontSize: \"lg\",\n          color: textColor[colorMode],\n          children: [\"by \", data.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: function onClick() {\n              return router.push(\"/blog/\".concat(data.id));\n            },\n            children: \"See more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"LOADING\"\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Blog - Untitled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        whileHover: {\n          scale: 1.1\n        },\n        whileTap: {\n          scale: 1.3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          m: 5,\n          colorScheme: \"teal\",\n          variant: \"outline\",\n          children: \"Write Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      minChildWidth: \"120px\",\n      spacing: \"40px\",\n      children: post.map(function (singlePost) {\n        /*#__PURE__*/\n        _jsxDEV(Box, {\n          onClick: function onClick() {\n            return router.push(\"/blog/\".concat(singlePost.id));\n          },\n          as: \"button\",\n          textAlign: \"start\",\n          m: 2,\n          children: generatePost(singlePost)\n        }, singlePost.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this2);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(blog, \"7TbCJ6K31xqjIdGaeTPcS6HP2iM=\", false, function () {\n  return [useColorMode, useRouter];\n});\n\nexport var __N_SSP = true;\nexport default blog;","map":{"version":3,"sources":["/Users/keki/dev/websites/web/src/pages/blog/index.tsx"],"names":["Button","useColorMode","Image","Badge","Box","Flex","SimpleGrid","Spacer","Stack","Text","motion","React","useState","Navbar","Head","useRouter","blog","props","colorMode","bgColor","light","dark","textColor","badgeColor","router","post","JSON","parse","loading","setLoading","generatePost","data","thumbnail","category","map","val","toUpperCase","create_at","title","content","author","push","id","scale","singlePost"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { StarIcon } from \"@chakra-ui/icons\";\nimport { Image } from \"@chakra-ui/image\";\nimport {\n  Badge,\n  Box,\n  Center,\n  Flex,\n  Grid,\n  GridItem,\n  HStack,\n  SimpleGrid,\n  Spacer,\n  Stack,\n  Text,\n} from \"@chakra-ui/layout\";\nimport { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport { Post } from \"../../types/post\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { NextPageContext } from \"next\";\nimport { getAllPosts, getPost } from \"../../utils/db\";\n\nfunction blog(props) {\n  const { colorMode } = useColorMode();\n  const bgColor = { light: \"gray.200\", dark: \"gray.700\" };\n  const textColor = { light: \"gray.500\", dark: \"gray.100\" };\n  const badgeColor = { light: \"whatsapp\", dark: \"teal\" };\n  const router = useRouter();\n  const post = JSON.parse(props.post);\n  const [loading, setLoading] = useState(true);\n\n  function generatePost(data) {\n    return (\n      <Box\n        width=\"300px\"\n        height=\"380px\"\n        maxHeight=\"400px\"\n        rounded=\"20px\"\n        overflow=\"hidden\"\n        boxShadow=\"sm\"\n        bg={bgColor[colorMode]}\n      >\n        <Image w=\"7xl\" src={data.thumbnail} alt=\"Image is not avaliable\" />\n        <Box p={5}>\n          <Stack isInline align=\"baseline\">\n            {data.category.map((val) => (\n              <Badge rounded=\"full\" colorScheme=\"whatsapp\">\n                {val.toUpperCase()}\n              </Badge>\n            ))}\n            <Text textTransform=\"uppercase\" fontSize=\"sm\" color=\"gray.500\">\n              {data.create_at}/{data.create_at}/\n              {/* {data.create_at.getFullYear()} */}\n            </Text>\n          </Stack>\n          <Text as=\"h2\" fontWeight=\"semibold\" fontSize=\"xl\" my={2}>\n            {data.title}\n          </Text>\n          <Text isTruncated fontWeight=\"light\" fontSize=\"md\" color=\"gray.500\">\n            {data.content}\n          </Text>\n          <Text\n            fontWeight=\"semibold\"\n            fontSize=\"lg\"\n            color={textColor[colorMode]}\n          >\n            by {data.author}\n          </Text>\n          <Box textAlign=\"center\" mt={4}>\n            <Button onClick={() => router.push(`/blog/${data.id}`)}>\n              See more\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n  if (loading) {\n    return <>LOADING</>;\n  }\n  return (\n    <>\n      <Head>\n        <title>Blog - Untitled</title>\n      </Head>\n      <Flex>\n        <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 1.3 }}>\n          <Button m={5} colorScheme=\"teal\" variant=\"outline\">\n            Write Post\n          </Button>\n        </motion.div>\n\n        <Spacer />\n        <Navbar />\n      </Flex>\n\n      <SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n        {/* get posts from firebase and call function */}\n        {/* TODO: get data from firebase and display data */}\n        {post.map((singlePost) => {\n          <Box\n            key={singlePost.id}\n            onClick={() => router.push(`/blog/${singlePost.id}`)}\n            as=\"button\"\n            textAlign=\"start\"\n            m={2}\n          >\n            {generatePost(singlePost)}\n          </Box>;\n        })}\n      </SimpleGrid>\n    </>\n  );\n}\n\nexport async function getServerSideProps(context: NextPageContext) {\n  const post = await getAllPosts();\n  const data = post.map((singlePost: any) => {\n    return {\n      ...singlePost,\n    };\n  });\n  return {\n    props: {\n      post: JSON.stringify(data),\n    },\n  };\n}\n\nexport default blog;\n"]},"metadata":{},"sourceType":"module"}