{"ast":null,"code":"import _regeneratorRuntime from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from \"../firebase/firebase\";\nexport var addUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authUser) {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return firebase.firestore().collection(\"users\").doc(authUser.uid).set(_objectSpread({}, authUser), {\n              merge: true\n            });\n\n          case 2:\n            resp = _context.sent;\n            return _context.abrupt(\"return\", resp);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var addQuiz = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(quizData) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return firebase.firestore().collection(\"quiz\").add(quizData);\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addQuiz(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getAllQuiz = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var snapshot, quiz;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return firebase.firestore().collection(\"quiz\").get();\n\n          case 2:\n            snapshot = _context3.sent;\n            quiz = snapshot.docs.map(function (doc) {\n              return _objectSpread({\n                id: doc.id\n              }, doc.data());\n            });\n            return _context3.abrupt(\"return\", quiz);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getAllQuiz() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getAllUsers = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var snapshot, users;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return firebase.firestore().collection(\"users\").get();\n\n          case 2:\n            snapshot = _context4.sent;\n            users = snapshot.docs.map(function (doc) {\n              return _objectSpread({\n                id: doc.id\n              }, doc.data());\n            });\n            return _context4.abrupt(\"return\", users);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getAllUsers() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getSingleQuiz = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(quizId) {\n    var snapshot, quizData;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return firebase.firestore().collection(\"quiz\").doc(String(quizId)).get();\n\n          case 2:\n            snapshot = _context5.sent;\n            quizData = snapshot.exists ? JSON.stringify(snapshot.data()) : null;\n            return _context5.abrupt(\"return\", quizData);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getSingleQuiz(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var addAnswer = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return firebase.firestore().collection(\"answer\").add(data);\n\n          case 2:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function addAnswer(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var getAnswer = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(answerId) {\n    var answerSnapshot, answerData;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return firebase.firestore().collection(\"answer\").doc(String(answerId)).get();\n\n          case 2:\n            answerSnapshot = _context7.sent;\n            answerData = answerSnapshot.exists ? JSON.stringify(answerSnapshot.data()) : null;\n            return _context7.abrupt(\"return\", answerData);\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getAnswer(_x5) {\n    return _ref7.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/keki/dev/websites/web/utils/db.ts"],"names":["firebase","addUser","authUser","firestore","collection","doc","uid","set","merge","resp","addQuiz","quizData","add","response","getAllQuiz","get","snapshot","quiz","docs","map","id","data","getAllUsers","users","getSingleQuiz","quizId","String","exists","JSON","stringify","addAnswer","getAnswer","answerId","answerSnapshot","answerData"],"mappings":";;;;;;;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AAEA,OAAO,IAAMC,OAAO;AAAA,sEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFF,QAAQ,CACxBG,SADgB,GAEhBC,UAFgB,CAEL,OAFK,EAGhBC,GAHgB,CAGZH,QAAQ,CAACI,GAHG,EAIhBC,GAJgB,mBAIPL,QAJO,GAIK;AAAEM,cAAAA,KAAK,EAAE;AAAT,aAJL,CADE;;AAAA;AACfC,YAAAA,IADe;AAAA,6CAMdA,IANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPR,OAAO;AAAA;AAAA;AAAA,GAAb;AASP,OAAO,IAAMS,OAAO;AAAA,uEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAX,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,MAAhC,EAAwCQ,GAAxC,CAA4CD,QAA5C,CADA;;AAAA;AACjBE,YAAAA,QADiB;AAAA,8CAEdA,QAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPH,OAAO;AAAA;AAAA;AAAA,GAAb;AAKP,OAAO,IAAMI,UAAU;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDd,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,MAAhC,EAAwCW,GAAxC,EADC;;AAAA;AAClBC,YAAAA,QADkB;AAElBC,YAAAA,IAFkB,GAEXD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAACd,GAAD;AAAA;AAAYe,gBAAAA,EAAE,EAAEf,GAAG,CAACe;AAApB,iBAA2Bf,GAAG,CAACgB,IAAJ,EAA3B;AAAA,aAAlB,CAFW;AAAA,8CAGjBJ,IAHiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVH,UAAU;AAAA;AAAA;AAAA,GAAhB;AAMP,OAAO,IAAMQ,WAAW;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFtB,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCW,GAAzC,EADE;;AAAA;AACnBC,YAAAA,QADmB;AAEnBO,YAAAA,KAFmB,GAEXP,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAACd,GAAD;AAAA;AAAYe,gBAAAA,EAAE,EAAEf,GAAG,CAACe;AAApB,iBAA2Bf,GAAG,CAACgB,IAAJ,EAA3B;AAAA,aAAlB,CAFW;AAAA,8CAGlBE,KAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXD,WAAW;AAAA;AAAA;AAAA,GAAjB;AAMP,OAAO,IAAME,aAAa;AAAA,uEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJzB,QAAQ,CAC5BG,SADoB,GAEpBC,UAFoB,CAET,MAFS,EAGpBC,GAHoB,CAGhBqB,MAAM,CAACD,MAAD,CAHU,EAIpBV,GAJoB,EADI;;AAAA;AACrBC,YAAAA,QADqB;AAMrBL,YAAAA,QANqB,GAMVK,QAAQ,CAACW,MAAT,GAAkBC,IAAI,CAACC,SAAL,CAAeb,QAAQ,CAACK,IAAT,EAAf,CAAlB,GAAoD,IAN1C;AAAA,8CAOpBV,QAPoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAba,aAAa;AAAA;AAAA;AAAA,GAAnB;AAUP,OAAO,IAAMM,SAAS;AAAA,uEAAG,kBAAOT,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACArB,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,EAA0CQ,GAA1C,CAA8CS,IAA9C,CADA;;AAAA;AACjBR,YAAAA,QADiB;AAAA,8CAEhBA,QAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATiB,SAAS;AAAA;AAAA;AAAA,GAAf;AAKP,OAAO,IAAMC,SAAS;AAAA,uEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMhC,QAAQ,CAClCG,SAD0B,GAE1BC,UAF0B,CAEf,QAFe,EAG1BC,GAH0B,CAGtBqB,MAAM,CAACM,QAAD,CAHgB,EAI1BjB,GAJ0B,EADN;;AAAA;AACjBkB,YAAAA,cADiB;AAMnBC,YAAAA,UANmB,GAMND,cAAc,CAACN,MAAf,GACbC,IAAI,CAACC,SAAL,CAAeI,cAAc,CAACZ,IAAf,EAAf,CADa,GAEb,IARmB;AAAA,8CAShBa,UATgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATH,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import firebase from \"../firebase/firebase\";\n\nexport const addUser = async (authUser: any) => {\n  const resp = await firebase\n    .firestore()\n    .collection(\"users\")\n    .doc(authUser.uid as string)\n    .set({ ...authUser }, { merge: true });\n  return resp;\n};\n\nexport const addQuiz = async (quizData) => {\n  let response = await firebase.firestore().collection(\"quiz\").add(quizData);\n  return response;\n};\n\nexport const getAllQuiz = async () => {\n  const snapshot = await firebase.firestore().collection(\"quiz\").get();\n  const quiz = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n  return quiz;\n};\n\nexport const getAllUsers = async () => {\n  const snapshot = await firebase.firestore().collection(\"users\").get();\n  const users = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n  return users;\n};\n\nexport const getSingleQuiz = async (quizId) => {\n  const snapshot = await firebase\n    .firestore()\n    .collection(\"quiz\")\n    .doc(String(quizId))\n    .get();\n  const quizData = snapshot.exists ? JSON.stringify(snapshot.data()) : null;\n  return quizData;\n};\n\nexport const addAnswer = async (data) => {\n  const response = await firebase.firestore().collection(\"answer\").add(data);\n  return response;\n};\n\nexport const getAnswer = async (answerId) => {\n  const answerSnapshot = await firebase\n    .firestore()\n    .collection(\"answer\")\n    .doc(String(answerId))\n    .get();\n  let answerData = answerSnapshot.exists\n    ? JSON.stringify(answerSnapshot.data())\n    : null;\n  return answerData;\n};\n"]},"metadata":{},"sourceType":"module"}