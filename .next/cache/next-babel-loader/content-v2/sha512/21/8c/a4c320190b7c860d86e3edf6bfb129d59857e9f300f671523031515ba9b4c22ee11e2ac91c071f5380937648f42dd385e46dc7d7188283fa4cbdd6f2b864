{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/keki/dev/websites/web/src/pages/projects.tsx\";\nimport { Badge, Box, Container, Flex, Grid, Spacer, Stack, Text } from \"@chakra-ui/layout\";\nimport Navbar from \"../components/Navbar\";\nimport { useColorMode } from \"@chakra-ui/color-mode\";\nimport { useRouter } from \"next/router\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Button } from \"@chakra-ui/button\";\nimport React from \"react\";\nexport default function Projects() {\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: \"gray.200\",\n    dark: \"gray.700\"\n  };\n  const textColor = {\n    light: \"gray.500\",\n    dark: \"gray.100\"\n  };\n  const badgeColor = {\n    light: \"gray\",\n    dark: \"teal\"\n  };\n  const variant = {\n    light: \"outline\",\n    dark: null\n  };\n  const router = useRouter();\n\n  function PostGen(data) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      width: \"300px\",\n      height: \"380px\",\n      rounded: \"20px\",\n      m: 3,\n      overflow: \"hidden\",\n      boxShadow: \"xl\",\n      bg: bgColor[colorMode],\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        h: \"44\",\n        w: \"3xl\",\n        src: data.thumbnail,\n        alt: \"Image is not avaliable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          align: \"baseline\",\n          children: data.category.map(val => /*#__PURE__*/_jsxDEV(Badge, {\n            rounded: \"full\",\n            variant: variant[colorMode],\n            colorScheme: badgeColor[colorMode],\n            children: val.toUpperCase()\n          }, \"1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"h2\",\n          fontWeight: \"semibold\",\n          fontSize: \"xl\",\n          my: 2,\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          isTruncated: true,\n          fontWeight: \"light\",\n          fontSize: \"md\",\n          color: \"gray.500\",\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"semibold\",\n          fontSize: \"lg\",\n          color: textColor[colorMode],\n          children: [\"by \", data.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => router.push(`/blog/${data.id}`),\n            children: \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"6xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        templateColumns: \"repeat(3, 1fr)\",\n        gap: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"start\",\n          m: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/keki/dev/websites/web/src/pages/projects.tsx"],"names":["Badge","Box","Container","Flex","Grid","Spacer","Stack","Text","Navbar","useColorMode","useRouter","Image","Button","React","Projects","colorMode","bgColor","light","dark","textColor","badgeColor","variant","router","PostGen","data","thumbnail","category","map","val","toUpperCase","title","description","author","push","id"],"mappings":"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","sourcesContent":["import {Head} from \"next/document\";\nimport {Badge, Box, Container, Flex, Grid, Spacer, Stack, Text} from \"@chakra-ui/layout\";\nimport Navbar from \"../components/Navbar\";\nimport {useColorMode} from \"@chakra-ui/color-mode\";\nimport {useRouter} from \"next/router\";\nimport {Image} from \"@chakra-ui/image\";\nimport {Button} from \"@chakra-ui/button\";\nimport React from \"react\";\n\nexport default function Projects() {\n  const { colorMode } = useColorMode();\n  const bgColor = { light: \"gray.200\", dark: \"gray.700\" };\n  const textColor = { light: \"gray.500\", dark: \"gray.100\" };\n  const badgeColor = { light: \"gray\", dark: \"teal\" };\n  const variant = { light: \"outline\", dark: null };\n  const router = useRouter();\n  \n  function PostGen(data) {\n    return (\n      <Box\n        width=\"300px\"\n        height=\"380px\"\n        rounded=\"20px\"\n        m={3}\n        overflow=\"hidden\"\n        boxShadow=\"xl\"\n        bg={bgColor[colorMode]}\n        key={data.id}\n      >\n        <Image\n          h=\"44\"\n          w=\"3xl\"\n          src={data.thumbnail}\n          alt=\"Image is not avaliable\"\n        />\n        <Box p={5}>\n          <Stack direction=\"row\" align=\"baseline\">\n            {data.category.map((val) => (\n              <Badge\n                key=\"1\"\n                rounded=\"full\"\n                variant={variant[colorMode]}\n                colorScheme={badgeColor[colorMode]}\n              >\n                {val.toUpperCase()}\n              </Badge>\n            ))}\n          </Stack>\n          <Text as=\"h2\" fontWeight=\"semibold\" fontSize=\"xl\" my={2}>\n            {data.title}\n          </Text>\n          <Text isTruncated fontWeight=\"light\" fontSize=\"md\" color=\"gray.500\">\n            {data.description}\n          </Text>\n          <Text\n            fontWeight=\"semibold\"\n            fontSize=\"lg\"\n            color={textColor[colorMode]}\n          >\n            by {data.author}\n          </Text>\n          <Box textAlign=\"center\" mt={4}>\n            <Button onClick={() => router.push(`/blog/${data.id}`)}>\n              자세히 보기\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n  \n    return (\n        <>\n            <Flex>\n              <Spacer />\n              <Navbar />\n            </Flex>\n          <Container maxW=\"6xl\">\n            <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n              <Box textAlign=\"start\" m={2}>\n                 \n              </Box>\n            </Grid>\n          </Container>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}