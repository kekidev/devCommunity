{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keki/dev/websites/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/keki/dev/websites/web/pages/blog/[id].tsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport firebase from \"../../firebase/firebase\";\n\nfunction Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  var db = firebase.firestore();\n\n  var _useState = useState({}),\n      item = _useState[0],\n      setItem = _useState[1];\n\n  var fetchItems = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              res = db.collection(\"articles\").doc(id);\n              _context.next = 3;\n              return res.get();\n\n            case 3:\n              data = _context.sent;\n              setItem(data.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchItems() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchItems();\n  }, []);\n\n  if (!item) {\n    console.log(\"no\");\n  } else {\n    console.log(\"yes\");\n    console.log(item);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), id]\n  }, void 0, true);\n}\n\n_s(Post, \"J92iq4BDQvDFdhsWARYWsmaoo8k=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/keki/dev/websites/web/pages/blog/[id].tsx"],"names":["useRouter","React","useEffect","useState","Navbar","firebase","Post","router","id","query","db","firestore","item","setItem","fetchItems","res","collection","doc","get","data","console","log"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AADc,MAENQ,EAFM,GAECD,MAAM,CAACE,KAFR,CAEND,EAFM;AAGd,MAAME,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX;;AAHc,kBAKUR,QAAQ,CAAC,EAAD,CALlB;AAAA,MAKPS,IALO;AAAA,MAKDC,OALC;;AAOd,MAAMC,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,GADW,GACLL,EAAE,CAACM,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BT,EAA9B,CADK;AAAA;AAAA,qBAEEO,GAAG,CAACG,GAAJ,EAFF;;AAAA;AAEXC,cAAAA,IAFW;AAGjBN,cAAAA,OAAO,CAACM,IAAI,CAACA,IAAN,CAAP;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVL,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAMAZ,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAACF,IAAL,EAAW;AACTQ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,EAFH;AAAA,kBADF;AAMD;;GA9BQF,I;UACQN,S;;;KADRM,I;AAgCT,eAAeA,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport firebase from \"../../firebase/firebase\";\n\nfunction Post() {\n  const router = useRouter();\n  const { id } = router.query;\n  const db = firebase.firestore();\n\n  const [item, setItem] = useState({});\n\n  const fetchItems = async () => {\n    const res = db.collection(\"articles\").doc(id);\n    const data = await res.get();\n    setItem(data.data);\n  };\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  if (!item) {\n    console.log(\"no\");\n  } else {\n    console.log(\"yes\");\n    console.log(item);\n  }\n\n  return (\n    <>\n      <Navbar />\n      {id}\n    </>\n  );\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}